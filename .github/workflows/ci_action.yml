name: CI Action

on:
  push:
      branches: 
        - '**'
        - '!master'
      tags: ['v[0-9].[0-9]+.[0-9]+']
  pull_request:
      branches:
        - '**'
jobs:
  build:
      name: Build Job
      runs-on: windows-2019
      env:
        BUILD_DIR: ${{ github.workspace }}${{ matrix.SEP }}build
        AUTO_PATH_SLN: AivDraw.sln
        AUTO_PATH_NUSPEC: AivDraw.nuspec
        AUTO_PATH_LIBR_DLL: AivDraw\bin\Release\AivDraw.dll
        AUTO_PATH_TEST_DLL: Tests\bin\Release\Tests.dll
        AUTO_PATH_DOCS: auto-docs\html
        AUTO_PATH_ARTIFACTS: artifacts
      outputs:
        version: ${{ steps.step1.outputs.version }}
        deploy: ${{ steps.step1.outputs.deploy }}
      steps:
        - name: Prepare env
          id: step1
          run: |
            $ver_selected='0.0.0'
            $do_deploy='false'
            if ( $GITHUB_REF_TYPE = 'tag' ) { 
              $ver_selected='${{ github.ref_name }}'
              $ver_selected=$tag_selected.Substring(1) 
              $do_deploy='true'
            }
            echo "Selected Version: $ver_selected"
            echo "Selected Deploy: $do_deploy"
            echo "version=$ver_selected >> $env:GITHUB_OUTPUT
            echo "deploy=$do_deploy >> $env:GITHUB_OUTPUT
        - name: Add msbuild to PATH
          uses: microsoft/setup-msbuild@v1.1
          with:
            msbuild-architecture: x64
       
        - name: Checkout
          uses: actions/checkout@v2
        - name: List Workspace
          run: dir ${{ github.workspace }}
        - name: Compile
          run: |
            nuget restore ${{env.AUTO_PATH_SLN}}
            msbuild /p:Configuration=Release ${{env.AUTO_PATH_SLN}}
            dir ${{env.AUTO_PATH_LIBR_DLL}}
        - name: Test
          run: packages/NUnit.ConsoleRunner.3.11.1/tools/nunit3-console.exe ${{env.AUTO_PATH_TEST_DLL}}
        - name: Package
          run: |
            $year=Get-Date -Format "yyyy"
            (Get-Content ${{env.AUTO_PATH_NUSPEC}} -raw) -replace '@AUTO_YEAR', $year | Set-Content ${{env.AUTO_PATH_NUSPEC}}
            Get-Content ${{env.AUTO_PATH_NUSPEC}} -raw
        - name: Documentation
          run: |
            choco install doxygen.install
            $Env:PATH += ";C:\Program Files\doxygen\bin"
            doxygen
            Compress-Archive -Path ${{env.AUTO_PATH_DOCS}} -DestinationPath docs.zip
        - name: Artifacts
          run: |
            cp *.nuget  ${{env.AUTO_PATH_ARTIFACTS}}
            cp docs.zip ${{env.AUTO_PATH_ARTIFACTS}}
  deploy:
    runs-on: windows-2019
    name: Deploy Job
    needs: [build]
    if: needs.build.outputs.deploy == 'true'
    steps:
      - name: Debug
        run: |
          echo "VERSION: ${{ needs.build.outputs.version }}"
          
